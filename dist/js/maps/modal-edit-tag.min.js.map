{"version":3,"names":[],"mappings":"","sources":["modal-edit-tag.js"],"sourcesContent":["'use strict'\n\nconst i18n \t\t\t= require( './i18n.min' )\n\nconst remote \t\t= require( 'electron' ).remote\nconst ipc \t\t\t= require( 'electron' ).ipcRenderer\nconst dialog \t\t= remote.dialog\nconst Store \t\t= require( 'electron-store' )\nconst store \t\t= new Store()\nconst Mousetrap \t= require( 'mousetrap' )\n\nconst $ \t\t\t= require( 'jquery' )\nconst jqueryI18next = require( 'jquery-i18next' )\n\njqueryI18next.init(i18n, $)\n\nconst fetch\t\t\t= require( './fetch.min' )\nconst serialize\t\t= require( './serialize.min' )\nconst entities\t\t= require( './entities.min' )\n\nconst \turlParams = new URLSearchParams( location.search ),\n\t\ttheTag = urlParams.get('tag')\n\n\n\n//note(dgmid): log exceptions\n\nwindow.onerror = function( error, url, line ) {\n\t\n\tipcRenderer.send( 'error-in-render', {error, url, line} )\n}\n\n\n\n//note(dgmid): set lang & localize strings\n\n$('html').attr('lang', i18n.language)\n$('header span').localize()\n$('label').localize()\n$('input').localize()\n$('button').localize()\n\n\n\n//note(dgmid): register kbd shortcut\nMousetrap.bind('command+.', function() {\n\t\n\tcloseModal()\n})\n\n\n\n//note(dgmid): populate form\n\nfunction populateForm() {\n\t\n\t$('header').append( entities.encode(theTag) )\n\t$('input[name=\"old_name\"]').val( theTag )\n\t$('input[name=\"new_name\"]').attr('placeholder', theTag).attr(\"pattern\", '^(?!' + theTag + '$).*')\n}\n\n\n\n//note(dgmid): close modal\n\nfunction closeModal() {\n\t\n\tconst modal = remote.getCurrentWindow()\n\tmodal.close()\n}\n\n\n\n$(document).ready(function() {\n\t\n\tpopulateForm()\n\t\n\t//note(dgmid): cancel modal\n\t\n\t$('#cancel').click( function() {\n\t\t\n\t\tcloseModal()\n\t})\n\t\n\t\n\t//note(dgmid): update data\n\t\n\t$('#modal-form').submit( function( e ) {\n\t\t\n\t\te.preventDefault()\n\t\t\n\t\tlet\toldtag = $('input[name=\"old_name\"]').val(),\n\t\t\tnewtag = $('input[name=\"new_name\"]').val()\n\t\t\n\t\tlet data = serialize.serialize({\n\t\t\n\t\t\t'old_name': oldtag,\n\t\t\t'new_name': newtag\n\t\t})\n\t\t\n\t\tfetch.bookmarksApi( 'modifytag', '', data, function() {\n\t\t\t\n\t\t\tipc.send('refresh', 'refresh')\n\t\t\tcloseModal()\n\t\t})\n\t})\n})\n"],"file":"../modal-edit-tag.min.js"}